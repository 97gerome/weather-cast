{"ast":null,"code":"var _jsxFileName = \"/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport debounce from 'lodash.debounce';\nimport { useMemo, useState, useEffect } from 'react';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  setSearchItem\n}) => {\n  _s();\n\n  const [debouncedItem, setDebouncedItem] = useState(\"\");\n  useEffect(() => {\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${debouncedItem}&appid=3cd2d4155100169791f8e9a2807df884`;\n\n    if (debouncedItem) {\n      fetch(`https://api.randomuser.me`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(res => res.json()).then(responseJson => console.log(responseJson));\n    }\n  }, [debouncedItem]);\n  const debouncedSetState = useMemo(() => debounce(searchItem => setDebouncedItem(searchItem), 700), [setDebouncedItem]);\n\n  const changeHandler = e => {\n    setSearchItem(e.target.value);\n    debouncedSetState(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"hSd6jW058EXZf/o3Tk+p9mMao38=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/SearchBar.js"],"names":["debounce","useMemo","useState","useEffect","SearchBar","setSearchItem","debouncedItem","setDebouncedItem","url","fetch","headers","then","res","json","responseJson","console","log","debouncedSetState","searchItem","changeHandler","e","target","value"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA2C,OAA3C;AAEA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAqB;AAAA;;AAGnC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,GAAG,GAAI,qDAAoDF,aAAc,yCAA/E;;AACA,QAAIA,aAAJ,EAAkB;AACdG,MAAAA,KAAK,CAAE,2BAAF,EACH;AACEC,QAAAA,OAAO,EAAG;AACV,0BAAgB,kBADN;AAEV,oBAAU;AAFA;AADZ,OADG,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQOG,YAAY,IAAIC,OAAO,CAACC,GAAR,CAAYF,YAAZ,CARvB;AASH;AACJ,GAbQ,EAaN,CAACR,aAAD,CAbM,CAAT;AAeA,QAAMW,iBAAiB,GAAGhB,OAAO,CAC7B,MAAMD,QAAQ,CAACkB,UAAU,IAAIX,gBAAgB,CAACW,UAAD,CAA/B,EAA6C,GAA7C,CADe,EAE/B,CAACX,gBAAD,CAF+B,CAAjC;;AAIA,QAAMY,aAAa,GAAIC,CAAD,IAAO;AACzBf,IAAAA,aAAa,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACAL,IAAAA,iBAAiB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACH,GAHD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAIH;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CArCD;;GAAMf,S;;KAAAA,S;AAuCN,eAAeA,SAAf","sourcesContent":["import debounce from 'lodash.debounce';\nimport {useMemo, useState, useEffect} from 'react';\n\nimport './SearchBar.css'\n\nconst SearchBar = ({setSearchItem}) => {\n\n\n    const [debouncedItem, setDebouncedItem] = useState(\"\");\n\n    useEffect(() => {\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${debouncedItem}&appid=3cd2d4155100169791f8e9a2807df884`\n        if (debouncedItem){\n            fetch(`https://api.randomuser.me`\n            , {\n                headers : { \n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n                }\n            })\n            .then(res => res.json())\n            .then( responseJson => console.log(responseJson))\n        }\n    }, [debouncedItem]);\n\n    const debouncedSetState = useMemo(\n        () => debounce(searchItem => setDebouncedItem(searchItem), 700)\n    , [setDebouncedItem]);\n\n    const changeHandler = (e) => {\n        setSearchItem(e.target.value);\n        debouncedSetState(e.target.value);\n    }\n\n\n    return (\n        <div className=\"search-bar\">\n            <form >\n                <input type=\"text\" onChange = {changeHandler}/>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBar\n"]},"metadata":{},"sourceType":"module"}