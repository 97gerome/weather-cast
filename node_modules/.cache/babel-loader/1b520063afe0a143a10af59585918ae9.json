{"ast":null,"code":"var _jsxFileName = \"/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/App.js\",\n    _s = $RefreshSig$();\n\n//Import Components\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport TopBar from './TopBar';\nimport SearchBar from './SearchBar';\nimport WeatherCard from './WeatherCard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nfunction App() {\n  _s();\n\n  const isMounted = useRef(false);\n  const [searchItem, setSearchItem] = useState(\"\");\n  const [tempUnit, setTempUnit] = useState(\"metric\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [weatherCoordinates, setWeatherCoordinates] = useState({});\n  const [resultsVisibility, toggleResultsVisibility] = useState(false);\n  const [weatherData, setWeatherData] = useState({});\n  const urlGeo = `http://api.openweathermap.org/geo/1.0/direct?q=${searchItem}&limit=5&appid=${apiKey}`;\n  const urlWeather = `https://api.openweathermap.org/data/2.5/onecall?lat=${weatherCoordinates.lat}&lon=${weatherCoordinates.lon}&units=${tempUnit}&appid=${apiKey}`;\n  useEffect(() => {\n    if (searchItem) {\n      axios.get(urlGeo).then(response => {\n        if (response.data.length > 0) {\n          setSearchResults(response.data);\n          toggleResultsVisibility(true);\n        } else toggleResultsVisibility(false);\n      }).catch(error => {\n        throw new Error(error.message);\n      });\n    } else toggleResultsVisibility(false);\n  }, [searchItem]);\n  useEffect(() => {\n    //toggle search results visibility when a country is selected\n    toggleResultsVisibility(false);\n    axios.get(urlWeather).then(response => {\n      if (response.data.length > 0) {\n        setWeatherData(response.data);\n      }\n    }).catch(error => {\n      throw new Error(error.message);\n    });\n  }, [weatherCoordinates]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        setSearchItem: setSearchItem,\n        searchResults: searchResults,\n        setWeatherCoordinates: setWeatherCoordinates,\n        resultsVisibility: resultsVisibility\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gL27EuiH533rqmPRafbhoY1OmVI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/App.js"],"names":["useEffect","useState","useRef","axios","TopBar","SearchBar","WeatherCard","apiKey","process","env","REACT_APP_API_KEY","App","isMounted","searchItem","setSearchItem","tempUnit","setTempUnit","searchResults","setSearchResults","weatherCoordinates","setWeatherCoordinates","resultsVisibility","toggleResultsVisibility","weatherData","setWeatherData","urlGeo","urlWeather","lat","lon","get","then","response","data","length","catch","error","Error","message"],"mappings":"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","sourcesContent":["//Import Components\nimport {useEffect, useState, useRef} from 'react';\nimport axios from 'axios';\nimport TopBar from './TopBar';\nimport SearchBar from './SearchBar';\nimport WeatherCard from './WeatherCard';\n\nimport './App.css';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nfunction App() {\n\n  const isMounted = useRef(false);\n  const [searchItem, setSearchItem] = useState(\"\");\n  const [tempUnit, setTempUnit] = useState(\"metric\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [weatherCoordinates, setWeatherCoordinates] = useState({});\n  const [resultsVisibility, toggleResultsVisibility] = useState(false);\n  const [weatherData, setWeatherData] = useState({});\n\n  const urlGeo = `http://api.openweathermap.org/geo/1.0/direct?q=${searchItem}&limit=5&appid=${apiKey}`;\n  const urlWeather = `https://api.openweathermap.org/data/2.5/onecall?lat=${weatherCoordinates.lat}&lon=${weatherCoordinates.lon}&units=${tempUnit}&appid=${apiKey}`;\n\n  useEffect(() => {  \n    if (searchItem){\n      axios.get(urlGeo)\n        .then(response => {\n          if (response.data.length > 0){\n            setSearchResults(response.data);\n            toggleResultsVisibility(true);\n          }\n          else toggleResultsVisibility(false);\n        })\n        .catch(error => {\n          throw new Error(error.message);\n        });\n    }\n    else toggleResultsVisibility(false);\n  }, [searchItem]);\n\n  useEffect(() => {\n    //toggle search results visibility when a country is selected\n    toggleResultsVisibility(false);\n    axios.get(urlWeather)\n      .then(response => {\n        if (response.data.length > 0){\n          setWeatherData(response.data);\n        }\n      })\n      .catch(error => {\n        throw new Error(error.message);\n      })\n  }, [weatherCoordinates]);\n\n  return (\n    <div className=\"App\">\n      <TopBar />\n      <main>\n        <SearchBar \n          setSearchItem ={setSearchItem} \n          searchResults={searchResults} \n          setWeatherCoordinates={setWeatherCoordinates} \n          resultsVisibility={resultsVisibility}\n        />\n        <WeatherCard />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}