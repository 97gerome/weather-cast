{"ast":null,"code":"var _jsxFileName = \"/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport debounce from 'lodash.debounce';\nimport { useMemo, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  setSearchItem\n}) => {\n  _s();\n\n  const [debouncedItem, setDebouncedItem] = useState(\"\");\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${debouncedItem}&appid=${apiKey}`;\n  useEffect(() => {\n    if (debouncedItem) {\n      axios.get(url).then(function (response) {\n        console.log(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      }).then(function () {// always executed\n      });\n    }\n  }, [debouncedItem, url]);\n  const debouncedSetState = useMemo(() => debounce(searchItem => setDebouncedItem(searchItem), 700), [setDebouncedItem]);\n\n  const changeHandler = e => {\n    setSearchItem(e.target.value);\n    debouncedSetState(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"hSd6jW058EXZf/o3Tk+p9mMao38=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/SearchBar.js"],"names":["debounce","useMemo","useState","useEffect","axios","SearchBar","setSearchItem","debouncedItem","setDebouncedItem","apiKey","process","env","REACT_APP_API_KEY","url","get","then","response","console","log","data","catch","error","debouncedSetState","searchItem","changeHandler","e","target","value"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAqB;AAAA;;AAEnC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMO,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;AACA,QAAMC,GAAG,GAAI,qDAAoDN,aAAc,UAASE,MAAO,EAA/F;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,aAAJ,EAAkB;AACdH,MAAAA,KAAK,CAACU,GAAN,CAAUD,GAAV,EACKE,IADL,CACU,UAAUC,QAAV,EAAoB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACH,OAHL,EAIKC,KAJL,CAIW,UAAUC,KAAV,EAAiB;AACpBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,OANL,EAOKN,IAPL,CAOU,YAAY,CACd;AACH,OATL;AAWH;AACJ,GAdQ,EAcN,CAACR,aAAD,EAAgBM,GAAhB,CAdM,CAAT;AAgBA,QAAMS,iBAAiB,GAAGrB,OAAO,CAC7B,MAAMD,QAAQ,CAACuB,UAAU,IAAIf,gBAAgB,CAACe,UAAD,CAA/B,EAA6C,GAA7C,CADe,EAE/B,CAACf,gBAAD,CAF+B,CAAjC;;AAIA,QAAMgB,aAAa,GAAIC,CAAD,IAAO;AACzBnB,IAAAA,aAAa,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACAL,IAAAA,iBAAiB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAIH;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAvCD;;GAAMnB,S;;KAAAA,S;AAyCN,eAAeA,SAAf","sourcesContent":["import debounce from 'lodash.debounce';\nimport {useMemo, useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport './SearchBar.css'\n\nconst SearchBar = ({setSearchItem}) => {\n\n    const [debouncedItem, setDebouncedItem] = useState(\"\");\n\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${debouncedItem}&appid=${apiKey}`;\n\n    useEffect(() => {  \n        if (debouncedItem){\n            axios.get(url)\n                .then(function (response) {\n                    console.log(response.data);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                })\n                .then(function () {\n                    // always executed\n                });\n\n        }\n    }, [debouncedItem, url]);\n\n    const debouncedSetState = useMemo(\n        () => debounce(searchItem => setDebouncedItem(searchItem), 700)\n    , [setDebouncedItem]);\n\n    const changeHandler = (e) => {\n        setSearchItem(e.target.value);\n        debouncedSetState(e.target.value);\n    }\n\n    return (\n        <div className=\"search-bar\">\n            <form >\n                <input type=\"text\" onChange = {changeHandler}/>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBar\n"]},"metadata":{},"sourceType":"module"}