{"ast":null,"code":"var _jsxFileName = \"/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/App.js\",\n    _s = $RefreshSig$();\n\n//Import Components\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TopBar from './TopBar';\nimport SearchBar from './SearchBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nfunction App() {\n  _s();\n\n  const [searchItem, setSearchItem] = useState(\"\");\n  const [tempUnit, setTempUnit] = useState(\"metric\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [weatherLocation, setWeatherLocation] = useState({});\n  const [resultsVisibility, toggleResultsVisibility] = useState(false);\n  const url = `http://api.openweathermap.org/geo/1.0/direct?q=${searchItem}&limit=5&appid=${apiKey}`;\n  useEffect(() => {\n    if (searchItem) {\n      axios.get(url).then(response => {\n        if (response.data.length > 0) {\n          setSearchResults(response.data);\n          toggleResultsVisibility(true);\n        }\n      }).catch(error => {\n        throw new Error(error.message);\n      });\n    }\n  }, [searchItem, url]);\n  useEffect(() => console.log(searchResults), [searchResults]);\n  useEffect(() => {\n    return () => {};\n  }, [weatherLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        setSearchItem: setSearchItem,\n        searchResults: searchResults,\n        setWeatherLocation: setWeatherLocation,\n        toggleResultsVisibility: toggleResultsVisibility\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/B5vyoYPxSIc5IhyaLheKmI8cW8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/App.js"],"names":["useEffect","useState","axios","TopBar","SearchBar","apiKey","process","env","REACT_APP_API_KEY","App","searchItem","setSearchItem","tempUnit","setTempUnit","searchResults","setSearchResults","weatherLocation","setWeatherLocation","resultsVisibility","toggleResultsVisibility","url","get","then","response","data","length","catch","error","Error","message","console","log"],"mappings":";;;AAAA;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAO,WAAP;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,QAAD,CAAxC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACiB,iBAAD,EAAoBC,uBAApB,IAA+ClB,QAAQ,CAAC,KAAD,CAA7D;AAEA,QAAMmB,GAAG,GAAI,kDAAiDV,UAAW,kBAAiBL,MAAO,EAAjG;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,UAAJ,EAAe;AACbR,MAAAA,KAAK,CAACmB,GAAN,CAAUD,GAAV,EACGE,IADH,CACQC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAuB,CAA3B,EAA6B;AAC3BV,UAAAA,gBAAgB,CAACQ,QAAQ,CAACC,IAAV,CAAhB;AACAL,UAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD;AACF,OANH,EAOGO,KAPH,CAOSC,KAAK,IAAI;AACd,cAAM,IAAIC,KAAJ,CAAUD,KAAK,CAACE,OAAhB,CAAN;AACD,OATH;AAUD;AACF,GAbQ,EAaN,CAACnB,UAAD,EAAaU,GAAb,CAbM,CAAT;AAeApB,EAAAA,SAAS,CAAC,MAAM8B,OAAO,CAACC,GAAR,CAAYjB,aAAZ,CAAP,EAAkC,CAACA,aAAD,CAAlC,CAAT;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM,CAEZ,CAFD;AAGD,GAJQ,EAIN,CAACgB,eAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,aAAa,EAAGL,aADlB;AAEE,QAAA,aAAa,EAAEG,aAFjB;AAGE,QAAA,kBAAkB,EAAEG,kBAHtB;AAIE,QAAA,uBAAuB,EAAEE;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA9CQV,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["//Import Components\nimport {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport TopBar from './TopBar';\nimport SearchBar from './SearchBar';\n\nimport './App.css';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nfunction App() {\n\n  const [searchItem, setSearchItem] = useState(\"\");\n  const [tempUnit, setTempUnit] = useState(\"metric\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [weatherLocation, setWeatherLocation] = useState({});\n  const [resultsVisibility, toggleResultsVisibility] = useState(false);\n\n  const url = `http://api.openweathermap.org/geo/1.0/direct?q=${searchItem}&limit=5&appid=${apiKey}`;\n\n  useEffect(() => {  \n    if (searchItem){\n      axios.get(url)\n        .then(response => {\n          if (response.data.length > 0){\n            setSearchResults(response.data);\n            toggleResultsVisibility(true);\n          }\n        })\n        .catch(error => {\n          throw new Error(error.message);\n        });\n    }\n  }, [searchItem, url]);\n\n  useEffect(() => console.log(searchResults),[searchResults]);\n\n  useEffect(() => {\n    return () => {\n\n    }\n  }, [weatherLocation]);\n\n  return (\n    <div className=\"App\">\n      <TopBar />\n      <main>\n        <SearchBar \n          setSearchItem ={setSearchItem} \n          searchResults={searchResults} \n          setWeatherLocation={setWeatherLocation} \n          toggleResultsVisibility={toggleResultsVisibility}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}