{"ast":null,"code":"var _jsxFileName = \"/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/Background.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useRef, useState, useEffect, memo } from 'react';\nimport { useSpring, useSprings, useTransition, animated, config } from 'react-spring';\nimport './Backdrop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SunCore = () => {\n  return /*#__PURE__*/_jsxDEV(\"circle\", {\n    id: \"Ellipse\",\n    cx: \"205\",\n    cy: \"196\",\n    r: \"125\",\n    fill: \"#FFE898\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n\n_c = SunCore;\n\nconst SunRay1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"path\", {\n    id: \"Vector_1\",\n    d: \"M55.4175 184.663C58.9435 108.655 73.604 99.6014 141.901 68.0927C232.461 26.3132 274.158 42.835 330.743 125.823C394.184 218.867 374.078 276.756 272.722 323.993C207.066 354.591 182.914 351.719 120.007 315.666C50.3171 275.726 51.6558 265.752 55.4175 184.663Z\",\n    fill: \"#FFF4CC\",\n    fillOpacity: \"0.62\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = SunRay1;\n\nconst SunRay2 = () => {\n  return /*#__PURE__*/_jsxDEV(\"path\", {\n    id: \"Vector_2\",\n    d: \"M41.5698 159.662C64.0369 102.514 92.8612 63.5387 150.361 46.7731C253.111 16.8134 326.383 36.0077 354.128 142.431C377.15 230.74 375.558 292.334 296.567 333.748C214.306 376.877 159.895 383.43 99.1311 311.764C53.3089 257.721 15.4075 226.209 41.5698 159.662Z\",\n    fill: \"#FFF9E6\",\n    fillOpacity: \"0.51\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = SunRay2;\nconst clearSunSprings = [{\n  loop: true,\n  from: {\n    transform: \"scale(1) rotate(0deg)\"\n  },\n  to: [{\n    transform: \"scale(1.1) rotate(-180deg)\"\n  }, {\n    transform: \"scale(1) rotate(-360deg)\"\n  }],\n  config: {\n    duration: 5000\n  }\n}, {\n  loop: true,\n  from: {\n    transform: \"scale(1) rotate(0deg)\"\n  },\n  to: [{\n    transform: \"scale(1.1) rotate(180deg)\"\n  }, {\n    transform: \"scale(1) rotate(360deg)\"\n  }],\n  config: {\n    duration: 3000\n  }\n}, {\n  loop: true,\n  from: {\n    transform: \"scale(1)\"\n  },\n  to: [{\n    transform: \"scale(1.1)\"\n  }, {\n    transform: \"scale(1)\"\n  }],\n  config: {\n    duration: 5000\n  }\n}];\n\nconst ClearWeather = () => {\n  _s();\n\n  const sunComponentsArr = [/*#__PURE__*/_jsxDEV(SunRay2, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 31\n  }, this), /*#__PURE__*/_jsxDEV(SunRay1, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 44\n  }, this), /*#__PURE__*/_jsxDEV(SunCore, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 57\n  }, this)];\n  const [mounted, setMounted] = useState(false);\n  const [springs, api] = useSprings(sunComponentsArr.length, () => {});\n  const translate = useSpring({\n    from: {\n      transform: \"translate(calc(50% - 200px), 800px)\"\n    },\n    enter: {\n      transform: \"translate(calc(50% - 200px), 0px)\"\n    },\n    leave: {\n      transform: \"translate(calc(50% - 200px), 800px)\"\n    },\n    config: config.molasses\n  });\n  useEffect(() => {\n    api.start(index => clearSunSprings[index]);\n    return () => {\n      api.stop();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(animated.g, {\n    id: \"weather-cast_sun\",\n    style: translate,\n    children: springs.map((spring, index) => /*#__PURE__*/_jsxDEV(animated.g, {\n      style: { ...spring,\n        transformOrigin: \"200px 200px\"\n      },\n      children: sunComponentsArr[index]\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ClearWeather, \"EMyMicqc0lHicR/QzokS4LLnA/U=\", false, function () {\n  return [useSprings, useSpring];\n});\n\n_c4 = ClearWeather;\n\nconst Background = props => {\n  _s2();\n\n  const {\n    weatherId\n  } = props;\n  const transition = useTransition(weatherId, {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: config.molasses\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"absolute\",\n      height: \"100%\",\n      width: \"100vw\"\n    },\n    children: transition((style, item) => {\n      if (item === 800) {\n        return /*#__PURE__*/_jsxDEV(animated.svg, {\n          height: \"100%\",\n          width: \"100%\",\n          style: style,\n          viewBox: \"0 0 1600 900\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(ClearWeather, {\n            weatherId: weatherId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Background, \"XDP2FMOoI4V9T6IPAMHOJnf8FXw=\", false, function () {\n  return [useTransition];\n});\n\n_c5 = Background;\nexport default _c6 = /*#__PURE__*/memo(Background);\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SunCore\");\n$RefreshReg$(_c2, \"SunRay1\");\n$RefreshReg$(_c3, \"SunRay2\");\n$RefreshReg$(_c4, \"ClearWeather\");\n$RefreshReg$(_c5, \"Background\");\n$RefreshReg$(_c6, \"%default%\");","map":{"version":3,"sources":["/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/Background.js"],"names":["useRef","useState","useEffect","memo","useSpring","useSprings","useTransition","animated","config","SunCore","SunRay1","SunRay2","clearSunSprings","loop","from","transform","to","duration","ClearWeather","sunComponentsArr","mounted","setMounted","springs","api","length","translate","enter","leave","molasses","start","index","stop","map","spring","transformOrigin","Background","props","weatherId","transition","opacity","position","height","width","style","item"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect, memo } from 'react';\nimport { useSpring, useSprings, useTransition, animated, config } from 'react-spring';\n\nimport './Backdrop.css';\n\nconst SunCore = () => {\n    return <circle id=\"Ellipse\" cx=\"205\" cy=\"196\" r=\"125\" fill=\"#FFE898\"/>;\n};\n\nconst SunRay1 = () => {\n    return (\n        <path \n            id=\"Vector_1\" \n            d=\"M55.4175 184.663C58.9435 108.655 73.604 99.6014 141.901 68.0927C232.461 26.3132 274.158 42.835 330.743 125.823C394.184 218.867 374.078 276.756 272.722 323.993C207.066 354.591 182.914 351.719 120.007 315.666C50.3171 275.726 51.6558 265.752 55.4175 184.663Z\" \n            fill=\"#FFF4CC\" \n            fillOpacity=\"0.62\"\n        />\n    );\n};\n\nconst SunRay2 = () => {\n    return (\n        <path \n            id=\"Vector_2\" \n            d=\"M41.5698 159.662C64.0369 102.514 92.8612 63.5387 150.361 46.7731C253.111 16.8134 326.383 36.0077 354.128 142.431C377.15 230.74 375.558 292.334 296.567 333.748C214.306 376.877 159.895 383.43 99.1311 311.764C53.3089 257.721 15.4075 226.209 41.5698 159.662Z\" \n            fill=\"#FFF9E6\" \n            fillOpacity=\"0.51\"\n        />\n    );\n};\n\nconst clearSunSprings = [\n    {\n        loop: true,\n        from: {transform: \"scale(1) rotate(0deg)\"},\n        to: [{transform: \"scale(1.1) rotate(-180deg)\"}, {transform: \"scale(1) rotate(-360deg)\"}],\n        config: {duration: 5000}\n    },\n    {\n        loop: true,\n        from: {transform: \"scale(1) rotate(0deg)\"},\n        to: [{transform: \"scale(1.1) rotate(180deg)\"}, {transform: \"scale(1) rotate(360deg)\"}],\n        config: {duration: 3000}\n    },\n    {\n        loop: true,\n        from: {transform: \"scale(1)\"},\n        to: [{transform: \"scale(1.1)\"}, {transform: \"scale(1)\"}],\n        config: {duration: 5000}\n    }\n]\n\nconst ClearWeather = () => {\n\n    const sunComponentsArr = [<SunRay2 />, <SunRay1 />, <SunCore />];\n\n    const [mounted, setMounted] = useState(false);\n    const [springs, api] = useSprings(sunComponentsArr.length, () => {});\n\n    const translate = useSpring({\n        from: { transform: \"translate(calc(50% - 200px), 800px)\"},\n        enter: { transform: \"translate(calc(50% - 200px), 0px)\"},\n        leave: { transform: \"translate(calc(50% - 200px), 800px)\"},\n        config: config.molasses\n    });\n\n    useEffect(() => {\n        api.start(index => clearSunSprings[index]);\n        return () => {\n            api.stop();\n        }\n    }, []);\n\n    return (\n            <animated.g id=\"weather-cast_sun\" style={translate}>\n                {springs.map((spring, index) => (\n                    <animated.g key={index} style={{...spring, transformOrigin: \"200px 200px\"}}>{sunComponentsArr[index]}</animated.g>\n                ))}\n            </animated.g>\n    );\n};\n\nconst Background = (props) => {\n\n    const { weatherId } = props;\n\n    const transition = useTransition(weatherId, {\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n        config: config.molasses\n    });\n    \n    return (\n        <div style={{position: \"absolute\", height: \"100%\", width: \"100vw\" }}>\n            {transition((style, item) => {\n                if(item === 800){\n                    return(\n                        <animated.svg height=\"100%\" width=\"100%\" style={style} viewBox=\"0 0 1600 900\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <ClearWeather weatherId={weatherId}/>\n                        </animated.svg>\n                    );\n                }\n            })}\n        </div>\n    );\n}\n\nexport default memo(Background);\n"]},"metadata":{},"sourceType":"module"}