{"ast":null,"code":"var _jsxFileName = \"/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/App.js\",\n    _s = $RefreshSig$();\n\n//Import Components\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TopBar from './TopBar';\nimport SearchBar from './SearchBar';\nimport WeatherCard from './WeatherCard';\nimport Background from './Background';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nconst getWeatherId = obj => {\n  const {\n    current\n  } = obj;\n  const {\n    weather\n  } = current;\n  const [{\n    id: weatherId\n  }] = weather;\n  console.log(weatherId);\n  return weatherId;\n};\n\nfunction App() {\n  _s();\n\n  const [searchItem, setSearchItem] = useState(\"\");\n  const [tempUnit, setTempUnit] = useState(\"metric\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [resultsVisibility, setResultsVisibility] = useState(false);\n  const [weatherId, setWeatherId] = useState();\n  const [isWeatherCardLoading, setWeatherCardLoading] = useState(true);\n  const [weatherCoordinates, setWeatherCoordinates] = useState({\n    lat: 14.6042,\n    lon: 120.9822,\n    loc: \"Manila, PH\"\n  });\n  const [weatherData, setWeatherData] = useState({});\n  const urlGeo = `http://api.openweathermap.org/geo/1.0/direct?q=${searchItem}&limit=5&appid=${apiKey}`;\n  const urlWeather = `https://api.openweathermap.org/data/2.5/onecall?lat=${weatherCoordinates.lat}&lon=${weatherCoordinates.lon}&units=${tempUnit}&appid=${apiKey}`;\n  useEffect(() => {\n    setResultsVisibility(false);\n\n    if (searchItem) {\n      axios.get(urlGeo).then(response => {\n        if (response.data.length > 0) {\n          setSearchResults(response.data);\n          setResultsVisibility(true);\n        }\n      }).catch(error => {\n        throw new Error(error.message);\n      });\n    }\n  }, [searchItem, urlGeo]);\n  useEffect(() => {\n    document.getElementById(\"search_input\").value = \"\";\n    setSearchItem(\"\");\n    setWeatherCardLoading(true);\n    axios.get(urlWeather).then(response => {\n      if (response) {\n        setWeatherData(response.data);\n        setWeatherId(() => getWeatherId(response.data));\n        setWeatherCardLoading(false);\n      }\n    }).catch(error => {\n      throw new Error(error.message);\n    });\n  }, [weatherCoordinates, tempUnit, urlWeather]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        weatherId: weatherId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        setSearchItem: setSearchItem,\n        searchResults: searchResults,\n        setWeatherCoordinates: setWeatherCoordinates,\n        resultsVisibility: resultsVisibility,\n        tempUnit: tempUnit,\n        setTempUnit: setTempUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n        location: weatherCoordinates.loc,\n        isWeatherCardLoading: isWeatherCardLoading,\n        weatherData: weatherData,\n        setWeatherId: setWeatherId,\n        tempUnit: tempUnit,\n        setTempUnit: setTempUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ovREljkWk5yMff9ncpvvGfgrwYs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/App.js"],"names":["useEffect","useState","axios","TopBar","SearchBar","WeatherCard","Background","apiKey","process","env","REACT_APP_API_KEY","getWeatherId","obj","current","weather","id","weatherId","console","log","App","searchItem","setSearchItem","tempUnit","setTempUnit","searchResults","setSearchResults","resultsVisibility","setResultsVisibility","setWeatherId","isWeatherCardLoading","setWeatherCardLoading","weatherCoordinates","setWeatherCoordinates","lat","lon","loc","weatherData","setWeatherData","urlGeo","urlWeather","get","then","response","data","length","catch","error","Error","message","document","getElementById","value"],"mappings":"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","sourcesContent":["//Import Components\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TopBar from './TopBar';\nimport SearchBar from './SearchBar';\nimport WeatherCard from './WeatherCard';\nimport Background from './Background';\n\nimport './App.css';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nconst getWeatherId = obj => {\n\n  const { current } = obj;\n  const { weather } = current;\n  const [{ id: weatherId }] = weather;\n\n  console.log(weatherId);\n\n  return weatherId;\n\n};\n\nfunction App() {\n\n  const [searchItem, setSearchItem] = useState(\"\");\n  const [tempUnit, setTempUnit] = useState(\"metric\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [resultsVisibility, setResultsVisibility] = useState(false);\n  const [weatherId, setWeatherId] = useState();\n  const [isWeatherCardLoading, setWeatherCardLoading] = useState(true);\n  const [weatherCoordinates, setWeatherCoordinates] = useState({lat: 14.6042, lon: 120.9822, loc: \"Manila, PH\"});\n  const [weatherData, setWeatherData] = useState({});\n\n  const urlGeo = `http://api.openweathermap.org/geo/1.0/direct?q=${searchItem}&limit=5&appid=${apiKey}`;\n  const urlWeather = `https://api.openweathermap.org/data/2.5/onecall?lat=${weatherCoordinates.lat}&lon=${weatherCoordinates.lon}&units=${tempUnit}&appid=${apiKey}`;\n\n  useEffect(() => {\n    setResultsVisibility(false);\n    if (searchItem){\n      axios.get(urlGeo)\n        .then(response => {\n          if (response.data.length > 0){\n            setSearchResults(response.data);\n            setResultsVisibility(true);\n          }\n        })\n        .catch(error => {\n          throw new Error(error.message);\n        });\n    }\n  }, [searchItem, urlGeo]);\n\n  useEffect(() => {\n    document.getElementById(\"search_input\").value = \"\";\n    setSearchItem(\"\");\n    setWeatherCardLoading(true);\n    axios.get(urlWeather)\n      .then(response => {\n        if (response){\n          setWeatherData(response.data);\n          setWeatherId(() => getWeatherId(response.data));\n          setWeatherCardLoading(false);\n        }\n      })\n      .catch(error => {\n        throw new Error(error.message);\n      })\n  }, [weatherCoordinates, tempUnit, urlWeather]);\n\n  return (\n    <div className=\"App\">\n      <TopBar />\n      <main>\n        <Background \n          weatherId={weatherId}\n        />\n        <SearchBar \n          setSearchItem ={setSearchItem} \n          searchResults={searchResults}\n          setWeatherCoordinates={setWeatherCoordinates} \n          resultsVisibility={resultsVisibility}\n          tempUnit={tempUnit}\n          setTempUnit={setTempUnit}\n        />\n        <WeatherCard \n          location={weatherCoordinates.loc}\n          isWeatherCardLoading={isWeatherCardLoading}\n          weatherData={weatherData}\n          setWeatherId={setWeatherId}\n          tempUnit={tempUnit}\n          setTempUnit={setTempUnit}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}