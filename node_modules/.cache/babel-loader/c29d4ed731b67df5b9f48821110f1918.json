{"ast":null,"code":"var _jsxFileName = \"/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/DailyForecast.js\";\nimport convertDateToObject from \"./modules/convertDateToObject\";\nimport './DailyForecast.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DailyForecast = props => {\n  const {\n    weatherData\n  } = props;\n  const {\n    daily: dailyForecastData,\n    timezone_offset: timezoneOffset\n  } = weatherData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"7-Day Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-weather-wrapper\",\n      children: dailyForecastData.slice(1).map((dailyData, index) => {\n        const {\n          day: dailyDay,\n          date: dailyDate,\n          month: dailyMonth\n        } = convertDateToObject(dailyData.dt, timezoneOffset);\n        const {\n          min: dailyMinTemp,\n          max: dailyMaxTemp\n        } = dailyData.temp;\n        const [{\n          description: dailyWeatherDesc,\n          icon: dailyWeatherIcon\n        }] = dailyData.weather;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"daily-weather-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"daily-weather-date\",\n            children: [dailyDay, \", \", dailyDate, \"/\", dailyMonth]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"daily-weather-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"daily-temp-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"H: \", dailyMaxTemp.toFixed(0), \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"L: \", dailyMinTemp.toFixed(0), \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://openweathermap.org/img/wn/${dailyWeatherIcon}@2x.png`,\n              alt: `daily-weather-icon-${index}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"daily-weather-desc\",\n              children: dailyWeatherDesc.charAt(0).toUpperCase() + dailyWeatherDesc.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = DailyForecast;\nexport default DailyForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyForecast\");","map":{"version":3,"sources":["/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/DailyForecast.js"],"names":["convertDateToObject","DailyForecast","props","weatherData","daily","dailyForecastData","timezone_offset","timezoneOffset","slice","map","dailyData","index","day","dailyDay","date","dailyDate","month","dailyMonth","dt","min","dailyMinTemp","max","dailyMaxTemp","temp","description","dailyWeatherDesc","icon","dailyWeatherIcon","weather","toFixed","charAt","toUpperCase"],"mappings":";AACA,OAAOA,mBAAP,MAAgC,+BAAhC;AAEA,OAAO,qBAAP;;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE7B,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAM;AAAEE,IAAAA,KAAK,EAAEC,iBAAT;AAA4BC,IAAAA,eAAe,EAAEC;AAA7C,MAAgEJ,WAAtE;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,gBACKE,iBAAiB,CAACG,KAAlB,CAAwB,CAAxB,EAA2BC,GAA3B,CAA+B,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAClD,cAAM;AAACC,UAAAA,GAAG,EAAEC,QAAN;AAAgBC,UAAAA,IAAI,EAAEC,SAAtB;AAAiCC,UAAAA,KAAK,EAAEC;AAAxC,YAAsDjB,mBAAmB,CAACU,SAAS,CAACQ,EAAX,EAAeX,cAAf,CAA/E;AACA,cAAM;AAACY,UAAAA,GAAG,EAAEC,YAAN;AAAoBC,UAAAA,GAAG,EAAEC;AAAzB,YAAyCZ,SAAS,CAACa,IAAzD;AACA,cAAM,CAAC;AAACC,UAAAA,WAAW,EAAEC,gBAAd;AAAgCC,UAAAA,IAAI,EAAEC;AAAtC,SAAD,IAA4DjB,SAAS,CAACkB,OAA5E;AACA,4BACI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,uBACKf,QADL,QACiBE,SADjB,OAC6BE,UAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACI;AAAM,cAAA,SAAS,EAAC,oBAAhB;AAAA,sCACI;AAAA,kCAAUK,YAAY,CAACO,OAAb,CAAqB,CAArB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,kCAAUT,YAAY,CAACS,OAAb,CAAqB,CAArB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAK,cAAA,GAAG,EAAG,oCAAmCF,gBAAiB,SAA/D;AAAyE,cAAA,GAAG,EAAG,sBAAqBhB,KAAM;AAA1G;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAM,cAAA,SAAS,EAAC,oBAAhB;AAAA,wBACKc,gBAAgB,CAACK,MAAjB,CAAwB,CAAxB,EAA2BC,WAA3B,KAA2CN,gBAAgB,CAACjB,KAAjB,CAAuB,CAAvB;AADhD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,WAA8CG,KAA9C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAiBH,OArBA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AA6BH,CAlCD;;KAAMV,a;AAoCN,eAAeA,aAAf","sourcesContent":["\nimport convertDateToObject from \"./modules/convertDateToObject\";\n\nimport './DailyForecast.css';\n\nconst DailyForecast = (props) => {\n\n    const { weatherData } = props;\n    const { daily: dailyForecastData, timezone_offset: timezoneOffset } = weatherData;\n\n    return (\n        <>\n            <h4>7-Day Forecast</h4>\n            <div className=\"daily-weather-wrapper\">\n                {dailyForecastData.slice(1).map((dailyData, index) => {\n                    const {day: dailyDay, date: dailyDate, month: dailyMonth} = convertDateToObject(dailyData.dt, timezoneOffset);\n                    const {min: dailyMinTemp, max: dailyMaxTemp} = dailyData.temp;\n                    const [{description: dailyWeatherDesc, icon: dailyWeatherIcon}] = dailyData.weather;\n                    return(\n                        <div className=\"daily-weather-container\" key={index}>\n                            <div className=\"daily-weather-date\">\n                                {dailyDay}, {dailyDate}/{dailyMonth}\n                            </div>\n                            <div className=\"daily-weather-details\">\n                                <span className=\"daily-temp-details\">\n                                    <span>H: {dailyMaxTemp.toFixed(0)}°</span>\n                                    <span>L: {dailyMinTemp.toFixed(0)}°</span>\n                                </span>\n                                <img src={`http://openweathermap.org/img/wn/${dailyWeatherIcon}@2x.png`} alt={`daily-weather-icon-${index}`}/>\n                                <span className=\"daily-weather-desc\">\n                                    {dailyWeatherDesc.charAt(0).toUpperCase() + dailyWeatherDesc.slice(1)}\n                                </span>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </>\n    )\n}\n\nexport default DailyForecast\n"]},"metadata":{},"sourceType":"module"}