{"ast":null,"code":"var _jsxFileName = \"/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/WeatherCard.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport Loader from './Loader';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyForecast from './HourlyForecast';\nimport DailyForecast from './DailyForecast';\nimport './WeatherCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherCard = props => {\n  _s();\n\n  const {\n    location,\n    isWeatherCardLoading,\n    weatherData,\n    tempUnit,\n    setTempUnit\n  } = props;\n  const metricButton = useRef();\n  const imperialButton = useRef();\n\n  const onClickHandler = (element, unit) => {\n    if (unit !== tempUnit) {\n      setTempUnit(unit);\n      metricButton.current.style.backgroundColor = \"white\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-card\",\n    children: isWeatherCardLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temp-unit-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          ref: metricButton,\n          className: \"temp-unit-metric\",\n          onClick: e => onClickHandler(\"metric\"),\n          children: \"C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: imperialButton,\n          className: \"temp-unit-imperial\",\n          onClick: e => onClickHandler(\"imperial\"),\n          children: \"F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        weatherData: weatherData,\n        tempUnit: tempUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(HourlyForecast, {\n        weatherData: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(DailyForecast, {\n        weatherData: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherCard, \"bgViOyh/VHYufjONjlzWNY8be+8=\");\n\n_c = WeatherCard;\nexport default WeatherCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"sources":["/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/WeatherCard.js"],"names":["useRef","Loader","CurrentWeather","HourlyForecast","DailyForecast","WeatherCard","props","location","isWeatherCardLoading","weatherData","tempUnit","setTempUnit","metricButton","imperialButton","onClickHandler","element","unit","current","style","backgroundColor","e"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,mBAAP;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,oBAAX;AAAiCC,IAAAA,WAAjC;AAA8CC,IAAAA,QAA9C;AAAwDC,IAAAA;AAAxD,MAAuEL,KAA7E;AAEA,QAAMM,YAAY,GAAGZ,MAAM,EAA3B;AACA,QAAMa,cAAc,GAAGb,MAAM,EAA7B;;AAEA,QAAMc,cAAc,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACtC,QAAIA,IAAI,KAAKN,QAAb,EAAsB;AAClBC,MAAAA,WAAW,CAACK,IAAD,CAAX;AACAJ,MAAAA,YAAY,CAACK,OAAb,CAAqBC,KAArB,CAA2BC,eAA3B,GAA6C,OAA7C;AACH;AACJ,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACSX,oBAAoB,gBACjB;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADiB,gBAIf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACI;AAAM,UAAA,GAAG,EAAEI,YAAX;AAAyB,UAAA,SAAS,EAAC,kBAAnC;AAAsD,UAAA,OAAO,EAAEQ,CAAC,IAAIN,cAAc,CAAC,QAAD,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,GAAG,EAAED,cAAX;AAA2B,UAAA,SAAS,EAAC,oBAArC;AAA0D,UAAA,OAAO,EAAEO,CAAC,IAAIN,cAAc,CAAC,UAAD,CAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAA2BP;AAA3B;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,cAAD;AAAgB,QAAA,WAAW,EAAEE,WAA7B;AAA0C,QAAA,QAAQ,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,cAAD;AAAgB,QAAA,WAAW,EAAED;AAA7B;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,aAAD;AAAe,QAAA,WAAW,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AALd;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAjCD;;GAAMJ,W;;KAAAA,W;AAmCN,eAAeA,WAAf","sourcesContent":["import { useRef } from 'react';\nimport Loader from './Loader';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyForecast from './HourlyForecast';\nimport DailyForecast from './DailyForecast';\n\nimport './WeatherCard.css';\n\nconst WeatherCard = (props) => {\n\n    const {location, isWeatherCardLoading, weatherData, tempUnit, setTempUnit} = props;\n\n    const metricButton = useRef();\n    const imperialButton = useRef();\n\n    const onClickHandler = (element, unit) => {\n        if (unit !== tempUnit){\n            setTempUnit(unit);\n            metricButton.current.style.backgroundColor = \"white\";\n        }\n    };\n\n    return (\n        <div className=\"weather-card\">\n                {isWeatherCardLoading ?\n                    <div className=\"loader-wrapper\">\n                        <Loader />\n                    </div>\n                    : <>\n                        <div className=\"temp-unit-container\">\n                            <span ref={metricButton} className=\"temp-unit-metric\" onClick={e => onClickHandler(\"metric\")}>C</span>\n                            <span ref={imperialButton} className=\"temp-unit-imperial\" onClick={e => onClickHandler(\"imperial\")}>F</span>\n                        </div>\n                        <div className=\"location\">{location}</div>\n                        <CurrentWeather weatherData={weatherData} tempUnit={tempUnit}/>\n                        <HourlyForecast weatherData={weatherData}/>\n                        <DailyForecast weatherData={weatherData}/>\n                    </>\n                }\n        </div>\n    );\n}\n\nexport default WeatherCard;\n"]},"metadata":{},"sourceType":"module"}