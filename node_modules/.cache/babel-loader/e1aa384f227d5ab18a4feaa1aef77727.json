{"ast":null,"code":"var _jsxFileName = \"/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/WeatherCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport Loader from './Loader';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyForecast from './HourlyForecast';\nimport DailyForecast from './DailyForecast';\nimport './WeatherCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnimatedLoader = animated(Loader);\n_c = AnimatedLoader;\n\nconst WeatherCard = props => {\n  _s();\n\n  const {\n    location,\n    isWeatherCardLoading,\n    weatherData,\n    tempUnit\n  } = props;\n  const {\n    istrue,\n    settrue\n  } = useState(false);\n  const loaderFade = useTransition(isWeatherCardLoading, {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: 200\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-card\",\n    children: [/*#__PURE__*/_jsxDEV(AnimatedLoader, {\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => settrue(!istrue),\n      children: \"eyyy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), loaderFade((style, item) => item ? /*#__PURE__*/_jsxDEV(AnimatedLoader, {\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) // <animated.div style={style} className=\"loader-wrapper\">\n    //     <Loader />\n    // </animated.div>\n    :\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        weatherData: weatherData,\n        tempUnit: tempUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(HourlyForecast, {\n        weatherData: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DailyForecast, {\n        weatherData: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherCard, \"cKh6yOLnukFy/2fvXjOtPmUxRTI=\", false, function () {\n  return [useTransition];\n});\n\n_c2 = WeatherCard;\nexport default WeatherCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnimatedLoader\");\n$RefreshReg$(_c2, \"WeatherCard\");","map":{"version":3,"sources":["/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/WeatherCard.js"],"names":["useState","useTransition","animated","Loader","CurrentWeather","HourlyForecast","DailyForecast","AnimatedLoader","WeatherCard","props","location","isWeatherCardLoading","weatherData","tempUnit","istrue","settrue","loaderFade","from","opacity","enter","leave","config","duration","style","item"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,cAAxC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,cAAc,GAAGL,QAAQ,CAACC,MAAD,CAA/B;KAAMI,c;;AAEN,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,oBAAZ;AAAkCC,IAAAA,WAAlC;AAA+CC,IAAAA;AAA/C,MAA4DJ,KAAlE;AACA,QAAM;AAAEK,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBf,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMgB,UAAU,GAAGf,aAAa,CAACU,oBAAD,EAAuB;AACnDM,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAD6C;AAEnDC,IAAAA,KAAK,EAAE;AAAED,MAAAA,OAAO,EAAE;AAAX,KAF4C;AAGnDE,IAAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAH4C;AAInDG,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAJ2C,GAAvB,CAAhC;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMR,OAAO,CAAC,CAACD,MAAF,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKE,UAAU,CAAC,CAACO,KAAD,EAAQC,IAAR,KACRA,IAAI,gBACJ,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA,YADI,CAEJ;AACA;AACA;AAJI;AAAA;AAKF;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAA2Bb;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,WAAW,EAAEE,WAA7B;AAA0C,QAAA,QAAQ,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,cAAD;AAAgB,QAAA,WAAW,EAAED;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,aAAD;AAAe,QAAA,WAAW,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBANK,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA/BD;;GAAMJ,W;UAKiBP,a;;;MALjBO,W;AAiCN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport Loader from './Loader';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyForecast from './HourlyForecast';\nimport DailyForecast from './DailyForecast';\n\nimport './WeatherCard.css';\n\nconst AnimatedLoader = animated(Loader);\n\nconst WeatherCard = (props) => {\n\n    const { location, isWeatherCardLoading, weatherData, tempUnit } = props;\n    const { istrue, settrue } = useState(false);\n\n    const loaderFade = useTransition(isWeatherCardLoading, {\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n        config: { duration: 200 }\n    })\n\n    return (\n        <div className=\"weather-card\">\n            <AnimatedLoader style={style}/>\n            <button onClick={() => settrue(!istrue)}>eyyy</button>\n            {loaderFade((style, item) =>\n                item ?\n                <AnimatedLoader style={style}/>\n                // <animated.div style={style} className=\"loader-wrapper\">\n                //     <Loader />\n                // </animated.div>\n                : <>\n                    <div className=\"location\">{location}</div>\n                    <CurrentWeather weatherData={weatherData} tempUnit={tempUnit}/>\n                    <HourlyForecast weatherData={weatherData}/>\n                    <DailyForecast weatherData={weatherData}/>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default WeatherCard;\n"]},"metadata":{},"sourceType":"module"}