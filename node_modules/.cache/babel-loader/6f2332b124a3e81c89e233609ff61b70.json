{"ast":null,"code":"var _jsxFileName = \"/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/WeatherCard.js\",\n    _s = $RefreshSig$();\n\nimport { useTransition, animated } from 'react-spring';\nimport Loader from './Loader';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyWeather from './HourlyWeather';\nimport convertDateToObject from './modules/convertDateToObject';\nimport './WeatherCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherCard = props => {\n  _s();\n\n  const {\n    location,\n    isWeatherCardLoading,\n    weatherData,\n    tempUnit\n  } = props;\n  const {\n    timezone_offset: timezoneOffset\n  } = weatherData || {};\n  const {\n    daily: weekDailyData\n  } = weatherData || {\n    daily: []\n  };\n  const loaderFade = useTransition(isWeatherCardLoading, {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: 170\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-card\",\n    children: loaderFade((style, item) => item ? /*#__PURE__*/_jsxDEV(animated.div, {\n      style: style,\n      className: \"loader-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        weatherData: weatherData,\n        tempUnit: tempUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(HourlyWeather, {\n        weatherData: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"7-Day Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daily-weather-wrapper\",\n        children: weekDailyData.slice(1).map((dailyData, index) => {\n          const {\n            day: dailyDay,\n            date: dailyDate,\n            month: dailyMonth\n          } = convertDateToObject(dailyData.dt, timezoneOffset);\n          const {\n            min: dailyMinTemp,\n            max: dailyMaxTemp\n          } = dailyData.temp;\n          const [{\n            description: dailyWeatherDesc,\n            icon: dailyWeatherIcon\n          }] = dailyData.weather;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"daily-weather-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"daily-weather-date\",\n              children: [dailyDay, \", \", dailyDate, \"/\", dailyMonth]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"daily-weather-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"daily-temp-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"H: \", dailyMaxTemp.toFixed(0), \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"L: \", dailyMinTemp.toFixed(0), \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://openweathermap.org/img/wn/${dailyWeatherIcon}@2x.png`,\n                alt: `daily-weather-icon-${index}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"daily-weather-desc\",\n                children: dailyWeatherDesc.charAt(0).toUpperCase() + dailyWeatherDesc.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherCard, \"qEC8OnIydzYaSuY0Z9qC4PHUx20=\", false, function () {\n  return [useTransition];\n});\n\n_c = WeatherCard;\nWeatherCard.defaultProps = {};\nexport default WeatherCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"sources":["/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/WeatherCard.js"],"names":["useTransition","animated","Loader","CurrentWeather","HourlyWeather","convertDateToObject","WeatherCard","props","location","isWeatherCardLoading","weatherData","tempUnit","timezone_offset","timezoneOffset","daily","weekDailyData","loaderFade","from","opacity","enter","leave","config","duration","style","item","slice","map","dailyData","index","day","dailyDay","date","dailyDate","month","dailyMonth","dt","min","dailyMinTemp","max","dailyMaxTemp","temp","description","dailyWeatherDesc","icon","dailyWeatherIcon","weather","toFixed","charAt","toUpperCase","defaultProps"],"mappings":"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","sourcesContent":["import { useTransition, animated } from 'react-spring';\nimport Loader from './Loader';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyWeather from './HourlyWeather';\n\nimport convertDateToObject from './modules/convertDateToObject';\n\nimport './WeatherCard.css';\n\nconst WeatherCard = (props) => {\n\n    const {location,isWeatherCardLoading, weatherData, tempUnit} = props;\n    const { timezone_offset: timezoneOffset } = weatherData || {}\n    const {daily: weekDailyData} = weatherData || {daily: []};\n\n    const loaderFade = useTransition(isWeatherCardLoading, {\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n        config: { duration: 170 }\n    })\n\n    return (\n        <div className=\"weather-card\">\n            {loaderFade((style, item) =>\n                item ?\n                <animated.div style={style} className=\"loader-wrapper\">\n                    <Loader/>\n                </animated.div>\n                : <>\n                    <div className=\"location\">{location}</div>\n                    <CurrentWeather weatherData={weatherData} tempUnit={tempUnit}/>\n                    <HourlyWeather weatherData={weatherData}/>\n                    <h4>7-Day Forecast</h4>\n                    <div className=\"daily-weather-wrapper\">\n                        {weekDailyData.slice(1).map((dailyData, index) => {\n                            const {day: dailyDay, date: dailyDate, month: dailyMonth} = convertDateToObject(dailyData.dt, timezoneOffset);\n                            const {min: dailyMinTemp, max: dailyMaxTemp} = dailyData.temp;\n                            const [{description: dailyWeatherDesc, icon: dailyWeatherIcon}] = dailyData.weather;\n                            return(\n                                <div className=\"daily-weather-container\" key={index}>\n                                    <div className=\"daily-weather-date\">\n                                        {dailyDay}, {dailyDate}/{dailyMonth}\n                                    </div>\n                                    <div className=\"daily-weather-details\">\n                                        <span className=\"daily-temp-details\">\n                                            <span>\n                                                H: {dailyMaxTemp.toFixed(0)}°\n                                            </span>\n                                            <span>\n                                                L: {dailyMinTemp.toFixed(0)}°\n                                            </span>\n                                        </span>\n                                        <img src={`http://openweathermap.org/img/wn/${dailyWeatherIcon}@2x.png`} alt={`daily-weather-icon-${index}`}/>\n                                        <span className=\"daily-weather-desc\">\n                                            {dailyWeatherDesc.charAt(0).toUpperCase() + dailyWeatherDesc.slice(1)}\n                                        </span>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n\nWeatherCard.defaultProps = {\n\n};\n\nexport default WeatherCard;\n"]},"metadata":{},"sourceType":"module"}