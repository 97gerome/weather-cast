{"ast":null,"code":"var _jsxFileName = \"/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/Background.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, memo } from 'react';\nimport { useSpring, useSprings, useTransition, animated, config } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SunCore = () => {\n  return /*#__PURE__*/_jsxDEV(\"circle\", {\n    id: \"Ellipse\",\n    cx: \"205\",\n    cy: \"196\",\n    r: \"125\",\n    fill: \"#FFE898\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n\n_c = SunCore;\n\nconst SunRay1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"path\", {\n    id: \"Vector_1\",\n    d: \"M55.4175 184.663C58.9435 108.655 73.604 99.6014 141.901 68.0927C232.461 26.3132 274.158 42.835 330.743 125.823C394.184 218.867 374.078 276.756 272.722 323.993C207.066 354.591 182.914 351.719 120.007 315.666C50.3171 275.726 51.6558 265.752 55.4175 184.663Z\",\n    fill: \"#FFF4CC\",\n    fillOpacity: \"0.62\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = SunRay1;\n\nconst SunRay2 = () => {\n  return /*#__PURE__*/_jsxDEV(\"path\", {\n    id: \"Vector_2\",\n    d: \"M41.5698 159.662C64.0369 102.514 92.8612 63.5387 150.361 46.7731C253.111 16.8134 326.383 36.0077 354.128 142.431C377.15 230.74 375.558 292.334 296.567 333.748C214.306 376.877 159.895 383.43 99.1311 311.764C53.3089 257.721 15.4075 226.209 41.5698 159.662Z\",\n    fill: \"#FFF9E6\",\n    fillOpacity: \"0.51\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = SunRay2;\nconst clearSunSprings = [{\n  loop: true,\n  from: {\n    transform: \"scale(1) rotate(0deg)\"\n  },\n  to: [{\n    transform: \"scale(1.1) rotate(-180deg)\"\n  }, {\n    transform: \"scale(1) rotate(-360deg)\"\n  }],\n  config: {\n    duration: 5000\n  }\n}, {\n  loop: true,\n  from: {\n    transform: \"scale(1) rotate(0deg)\"\n  },\n  to: [{\n    transform: \"scale(1.1) rotate(180deg)\"\n  }, {\n    transform: \"scale(1) rotate(360deg)\"\n  }],\n  config: {\n    duration: 3000\n  }\n}, {\n  loop: true,\n  from: {\n    transform: \"scale(1)\"\n  },\n  to: [{\n    transform: \"scale(1.1)\"\n  }, {\n    transform: \"scale(1)\"\n  }],\n  config: {\n    duration: 5000\n  }\n}];\n\nconst ClearWeather = ({\n  weatherId\n}) => {\n  _s();\n\n  const sunComponentsArr = [/*#__PURE__*/_jsxDEV(SunRay2, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 31\n  }, this), /*#__PURE__*/_jsxDEV(SunRay1, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 44\n  }, this), /*#__PURE__*/_jsxDEV(SunCore, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 57\n  }, this)];\n  const [springs, api] = useSprings(sunComponentsArr.length, () => {});\n  useEffect(() => {\n    api.start(index => clearSunSprings[index]);\n  }, []);\n  const transition = useTransition(weatherId, {\n    from: {\n      transform: \"translateY(500px)\",\n      opacity: 0\n    },\n    enter: {\n      transform: \"translateY(0px)\",\n      opacity: 1\n    },\n    leave: {\n      transform: \"translateY(500px)\",\n      opacity: 0\n    },\n    delay: 200,\n    trail: 500,\n    config: config.molasses\n  });\n  return transition((style, item) => item && /*#__PURE__*/_jsxDEV(animated.g, {\n    id: \"weather-cast_sun\",\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"400px\",\n      height: \"400px\",\n      style: style,\n      viewBox: \"500 0 400 400\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: springs.map((spring, index) => /*#__PURE__*/_jsxDEV(animated.g, {\n        style: { ...spring,\n          transformOrigin: \"center\"\n        },\n        children: sunComponentsArr[index]\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 13\n  }, this));\n};\n\n_s(ClearWeather, \"p5s8hwujGxzBtGIEuCBbuS7qI4c=\", false, function () {\n  return [useSprings, useTransition];\n});\n\n_c4 = ClearWeather;\n\nconst Background = props => {\n  const {\n    weatherId\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"absolute\",\n      height: \"100%\",\n      width: \"100vw\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      viewBox: \"0 0 1000 1000\",\n      fill: \"none\",\n      style: {\n        transformBox: \"fill-box\"\n      },\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /*#__PURE__*/_jsxDEV(ClearWeather, {\n        weatherId: weatherId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = Background;\nexport default _c6 = /*#__PURE__*/memo(Background);\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SunCore\");\n$RefreshReg$(_c2, \"SunRay1\");\n$RefreshReg$(_c3, \"SunRay2\");\n$RefreshReg$(_c4, \"ClearWeather\");\n$RefreshReg$(_c5, \"Background\");\n$RefreshReg$(_c6, \"%default%\");","map":{"version":3,"sources":["/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/Background.js"],"names":["useState","useEffect","memo","useSpring","useSprings","useTransition","animated","config","SunCore","SunRay1","SunRay2","clearSunSprings","loop","from","transform","to","duration","ClearWeather","weatherId","sunComponentsArr","springs","api","length","start","index","transition","opacity","enter","leave","delay","trail","molasses","style","item","map","spring","transformOrigin","Background","props","position","height","width","transformBox"],"mappings":"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","sourcesContent":["import { useState, useEffect, memo } from 'react';\nimport { useSpring, useSprings, useTransition, animated, config } from 'react-spring';\n\nconst SunCore = () => {\n    return <circle id=\"Ellipse\" cx=\"205\" cy=\"196\" r=\"125\" fill=\"#FFE898\"/>;\n};\n\nconst SunRay1 = () => {\n    return (\n        <path \n            id=\"Vector_1\" \n            d=\"M55.4175 184.663C58.9435 108.655 73.604 99.6014 141.901 68.0927C232.461 26.3132 274.158 42.835 330.743 125.823C394.184 218.867 374.078 276.756 272.722 323.993C207.066 354.591 182.914 351.719 120.007 315.666C50.3171 275.726 51.6558 265.752 55.4175 184.663Z\" \n            fill=\"#FFF4CC\" \n            fillOpacity=\"0.62\"\n        />\n    );\n};\n\nconst SunRay2 = () => {\n    return (\n        <path \n            id=\"Vector_2\" \n            d=\"M41.5698 159.662C64.0369 102.514 92.8612 63.5387 150.361 46.7731C253.111 16.8134 326.383 36.0077 354.128 142.431C377.15 230.74 375.558 292.334 296.567 333.748C214.306 376.877 159.895 383.43 99.1311 311.764C53.3089 257.721 15.4075 226.209 41.5698 159.662Z\" \n            fill=\"#FFF9E6\" \n            fillOpacity=\"0.51\"\n        />\n    );\n};\n\nconst clearSunSprings = [\n    {\n        loop: true,\n        from: {transform: \"scale(1) rotate(0deg)\"},\n        to: [{transform: \"scale(1.1) rotate(-180deg)\"}, {transform: \"scale(1) rotate(-360deg)\"}],\n        config: {duration: 5000}\n    },\n    {\n        loop: true,\n        from: {transform: \"scale(1) rotate(0deg)\"},\n        to: [{transform: \"scale(1.1) rotate(180deg)\"}, {transform: \"scale(1) rotate(360deg)\"}],\n        config: {duration: 3000}\n    },\n    {\n        loop: true,\n        from: {transform: \"scale(1)\"},\n        to: [{transform: \"scale(1.1)\"}, {transform: \"scale(1)\"}],\n        config: {duration: 5000}\n    }\n]\n\nconst ClearWeather = ({weatherId}) => {\n\n    const sunComponentsArr = [<SunRay2 />, <SunRay1 />, <SunCore />];\n\n    const [springs, api] = useSprings(sunComponentsArr.length, () => {});\n\n    useEffect(() => {\n        api.start(index => clearSunSprings[index]);\n    }, []);\n\n\n    const transition = useTransition(weatherId, {\n        from: { transform: \"translateY(500px)\", opacity: 0 },\n        enter: { transform: \"translateY(0px)\", opacity: 1 },\n        leave: { transform: \"translateY(500px)\", opacity: 0 },\n        delay: 200,\n        trail: 500,\n        config: config.molasses\n    });\n\n    return (\n        transition((style, item) => \n        item && (\n            <animated.g id=\"weather-cast_sun\" style={style}>\n                <svg width=\"400px\" height=\"400px\" style={style} viewBox=\"500 0 400 400\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        {springs.map((spring, index) => (\n                            <animated.g key={index} style={{...spring, transformOrigin: \"center\"}}>{sunComponentsArr[index]}</animated.g>\n                        ))}\n                </svg>\n            </animated.g>\n        ))\n    );\n};\n\nconst Background = (props) => {\n\n    const { weatherId } = props;\n\n    return (\n        <div style={{position: \"absolute\", height: \"100%\", width: \"100vw\" }}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 1000 1000\" fill=\"none\" style={{transformBox: \"fill-box\"}} xmlns=\"http://www.w3.org/2000/svg\">\n                <ClearWeather weatherId={weatherId}/>\n            </svg>\n        </div>\n    );\n}\n\nexport default memo(Background);\n"]},"metadata":{},"sourceType":"module"}