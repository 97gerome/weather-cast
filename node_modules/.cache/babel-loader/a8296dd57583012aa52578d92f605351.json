{"ast":null,"code":"var _jsxFileName = \"/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/WeatherCard.js\";\nimport { intersection } from 'lodash';\nimport { useState, useEffect } from 'react';\nimport convertDateToObject from './modules/convertDateToObject';\nimport './WeatherCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherCard = props => {\n  const {\n    location,\n    weatherData,\n    tempUnit\n  } = props;\n  const {\n    dt: currentDt,\n    temp: currentTemp,\n    weather: currentWeather\n  } = weatherData.current || {\n    dt: \"\",\n    temp: 0,\n    weather: [{\n      description: \"\",\n      icon: \"01d\"\n    }]\n  };\n  const {\n    day: currentDay,\n    date: currentDate,\n    month: currentMonth\n  } = convertDateToObject(currentDt);\n  const [{\n    description: currentWeatherDesc,\n    icon\n  }] = currentWeather;\n  const dayHourlyData = weatherData.hourly.slice(0, 23);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-card\",\n    children: weatherData && weatherData.current && weatherData.current.weather && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-weather-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-dt\",\n          children: [currentDay, \", \", currentDate, \"/\", currentMonth]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-temp\",\n          children: [currentTemp.toFixed(), \"\\xB0\", tempUnit === \"metric\" ? \"C\" : \"F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-weather\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://openweathermap.org/img/wn/${icon}@2x.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), currentWeatherDesc.charAt(0).toUpperCase() + currentWeatherDesc.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), dayHourlyData.map((hourlyData, index) => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          className: \"hourly-weather-container\",\n          children: hourlyData.temp\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = WeatherCard;\nWeatherCard.defaultProps = {};\nexport default WeatherCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"sources":["/Users/geromemandapat/Documents/Personal Files/React Projects/weather-cast/src/WeatherCard.js"],"names":["intersection","useState","useEffect","convertDateToObject","WeatherCard","props","location","weatherData","tempUnit","dt","currentDt","temp","currentTemp","weather","currentWeather","current","description","icon","day","currentDay","date","currentDate","month","currentMonth","currentWeatherDesc","dayHourlyData","hourly","slice","toFixed","charAt","toUpperCase","map","hourlyData","index","defaultProps"],"mappings":";AAAA,SAASA,YAAT,QAA6B,QAA7B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AAEA,OAAO,mBAAP;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,MAAoCH,KAA1C;AACA,QAAM;AACFI,IAAAA,EAAE,EAAEC,SADF;AAEFC,IAAAA,IAAI,EAAEC,WAFJ;AAGFC,IAAAA,OAAO,EAAEC;AAHP,MAIFP,WAAW,CAACQ,OAAZ,IACJ;AACIN,IAAAA,EAAE,EAAE,EADR;AAEIE,IAAAA,IAAI,EAAE,CAFV;AAGIE,IAAAA,OAAO,EAAE,CAAC;AAACG,MAAAA,WAAW,EAAE,EAAd;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAAD;AAHb,GALA;AAUA,QAAM;AAACC,IAAAA,GAAG,EAAEC,UAAN;AAAkBC,IAAAA,IAAI,EAAEC,WAAxB;AAAqCC,IAAAA,KAAK,EAAEC;AAA5C,MAA4DpB,mBAAmB,CAACO,SAAD,CAArF;AACA,QAAM,CAAC;AAACM,IAAAA,WAAW,EAAEQ,kBAAd;AAAkCP,IAAAA;AAAlC,GAAD,IAA4CH,cAAlD;AACA,QAAMW,aAAa,GAAGlB,WAAW,CAACmB,MAAZ,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,EAA5B,CAAtB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACKpB,WAAW,IAAIA,WAAW,CAACQ,OAA3B,IAAsCR,WAAW,CAACQ,OAAZ,CAAoBF,OAA1D,iBACG;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAA2BP;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,qBAA6Ba,UAA7B,QAA2CE,WAA3C,OAAyDE,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,qBAA+BX,WAAW,CAACgB,OAAZ,EAA/B,UAAuDpB,QAAQ,KAAK,QAAb,GAAuB,GAAvB,GAA6B,GAApF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAG,oCAAmCS,IAAK;AAAnD;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKO,kBAAkB,CAACK,MAAnB,CAA0B,CAA1B,EAA6BC,WAA7B,KAA6CN,kBAAkB,CAACG,KAAnB,CAAyB,CAAzB,CAFlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAUKF,aAAa,CAACM,GAAd,CAAkB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACtC;AAAA;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,oBACKD,UAAU,CAACrB;AADhB,WAA+CsB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAGH,OAJA,CAVL;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAvCD;;KAAM7B,W;AAyCNA,WAAW,CAAC8B,YAAZ,GAA2B,EAA3B;AAIA,eAAe9B,WAAf","sourcesContent":["import { intersection } from 'lodash';\nimport { useState, useEffect } from 'react';\nimport convertDateToObject from './modules/convertDateToObject';\n\nimport './WeatherCard.css';\n\nconst WeatherCard = (props) => {\n\n    const {location, weatherData, tempUnit} = props;   \n    const {\n        dt: currentDt, \n        temp: currentTemp, \n        weather: currentWeather\n    } = weatherData.current || \n    {\n        dt: \"\", \n        temp: 0, \n        weather: [{description: \"\", icon: \"01d\"}]\n    };\n    const {day: currentDay, date: currentDate, month: currentMonth} = convertDateToObject(currentDt);\n    const [{description: currentWeatherDesc, icon}] = currentWeather;\n    const dayHourlyData = weatherData.hourly.slice(0, 23);\n\n    return (\n        <div className=\"weather-card\">\n            {weatherData && weatherData.current && weatherData.current.weather &&\n                <>\n                    <div className=\"location\">{location}</div>\n                    <div className=\"current-weather-container\">\n                        <div className=\"current-dt\">{currentDay}, {currentDate}/{currentMonth}</div>\n                        <div className=\"current-temp\">{currentTemp.toFixed()}Â°{tempUnit === \"metric\"? \"C\" : \"F\"}</div>\n                        <div className=\"current-weather\">\n                            <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`}/>\n                            {currentWeatherDesc.charAt(0).toUpperCase() + currentWeatherDesc.slice(1)}\n                        </div>\n                    </div>\n                    {dayHourlyData.map((hourlyData, index) => {\n                        <div className=\"hourly-weather-container\" key={index}>\n                            {hourlyData.temp}\n                        </div>\n                    })}\n                </>\n            }\n        </div>\n    );\n}\n\nWeatherCard.defaultProps = {\n\n};\n\nexport default WeatherCard;\n"]},"metadata":{},"sourceType":"module"}